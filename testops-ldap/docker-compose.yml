version: "3.9"

services:

  testops:
    restart: always
    image: ${ALLURE_REGISTRY}/${ALLURE_SLUG}/allure-testops:${ALLURE_VERSION}
    container_name: allure-testops
    networks:
      - testops-net
    ports:
      - "${ALLURE_INSTANCE_PORT}:${ALLURE_CONTAINER_PORT}"
    healthcheck:
      test: "curl -f http://localhost:${ALLURE_CONTAINER_PORT}/management/health || exit 1"
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 20s
    environment:
      TLS_ENDPOINTS: ${TLS_ENDPOINTS}
      SPRING_PROFILES_ACTIVE: compose
      SPRING_CLOUD_CONSUL_ENABLED: "false"
      SPRING_OUTPUT_ANSI_ENABLED: never
      ALLURE_JWT_SECRET: ${ALLURE_JWT_SECRET}
      ALLURE_SECURE: ${ALLURE_SECURE_COOKIE}
      ALLURE_JWT_ACCESS_TOKEN_VALIDITY_SECONDS: ${ALLURE_SESSION_DURATION}

      ALLURE_ENDPOINT: ${ALLURE_PROTO}://${ALLURE_HOST}
      ALLURE_CRYPTO_PASSWORD: ${ALLURE_CRYPTO_PASSWORD}
      ALLURE_SECURITY_USER_NAME: ${ALLURE_ADMIN}
      ALLURE_SECURITY_USER_PASSWORD: ${ALLURE_ADMIN_PASS}
      # legacy parameters for users registration, leave as they are defined
      ALLURE_REGISTRATION_AUTOAPPROVE: false
      ALLURE_REGISTRATION_ENABLED: false
      # default role for a new user added as system managed account
      ALLURE_REGISTRATION_DEFAULT_ROLE: ${ALLURE_REGISTRATION_DEFAULT_ROLE}

      SPRING_SESSION_STORE_TYPE: REDIS
      SPRING_DATA_REDIS_HOST: ${ALLURE_REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${ALLURE_REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${ALLURE_REDIS_PASS}
      SPRING_DATA_REDIS_DATABASE: ${ALLURE_REDIS_DB}
      
      # SPRING_MAIL_ are mandatory if you are using system acounts
      SPRING_MAIL_HOST: ${ALLURE_MAIL_HOST}
      SPRING_MAIL_PORT: ${ALLURE_MAIL_PORT}
      SPRING_MAIL_USERNAME: ${ALLURE_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${ALLURE_MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: ${ALLURE_MAIL_SMTP_AUTH}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: ${ALLURE_MAIL_SMTP_STARTTLS_ENABLE}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: ${ALLURE_MAIL_SMTP_STARTTLS_REQUIRED}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE: ${ALLURE_MAIL_SMTP_SSL_ENABLE}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST: ${ALLURE_MAIL_SMTP_SSL_TRUST}
      ALLURE_MAIL_FROM: ${ALLURE_MAIL_FROM}

      ALLURE_LOGIN_PRIMARY: ldap
      ALLURE_LOGIN_LDAP_ENABLED: 'true'
      ALLURE_LOGIN_LDAP_REFERRAL: follow
      ALLURE_LOGIN_LDAP_URL: ${LDAP_URL}
      #ALLURE_LOGIN_LDAP_USERDNPATTERNS: ${LDAP_USER_DN_PATTERNS}
      ALLURE_LOGIN_LDAP_USERSEARCHBASE: ${LDAP_USER_SEARCH_BASE}
      ALLURE_LOGIN_LDAP_USERSEARCHFILTER: ${LDAP_USER_SEARCH_FILTER}
      ALLURE_LOGIN_LDAP_GROUPSEARCHBASE: ${LDAP_GROUP_SEARCH_BASE}
      ALLURE_LOGIN_LDAP_GROUPSEARCHFILTER: ${LDAP_GROUP_SEARCH_FILTER}
      ALLURE_LOGIN_LDAP_GROUPROLEATTRIBUTE: ${LDAP_GROUP_ROLE_ATTRIBUTE}
      ALLURE_LOGIN_LDAP_SYNCROLES: ${LDAP_SYNC_ROLES}
      ALLURE_LOGIN_LDAP_UIDATTRIBUTE: ${LDAP_UID_ATTRIBUTE}
      ALLURE_LOGIN_LDAP_GROUPAUTHORITIES_ROLEUSERGROUPS: ${LDAP_MAPPING_ROLE_USERS}
      ALLURE_LOGIN_LDAP_GROUPAUTHORITIES_ROLEADMINGROUPS: ${LDAP_MAPPING_ROLE_ADMINS}
      ALLURE_LOGIN_LDAP_DEFAULTROLE: ${LDAP_DEFAULT_ROLE}
      ALLURE_LOGIN_LDAP_USERDN: ${LDAP_LOGIN_SA}
      ALLURE_LOGIN_LDAP_PASSWORD: ${LDAP_LOGIN_SA_PASS}
      ALLURE_LOGIN_LDAP_LOWERCASEUSERNAMES: ${LDAP_LOWERCASEUSERNAMES}
      
      # disabled by default, see comments in .env
      #ALLURE_LOGIN_LDAP_PASSWORDATTRIBUTE: ${LDAP_PASSWORDATTRIBUTE}


      #TLS_DB_ENDPOINTS: ${TLS_DB_ENDPOINTS}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${ALLURE_REPORT_DB_HOST}:${ALLURE_REPORT_DB_PORT}/${ALLURE_REPORT_DB_NAME}?assumeMinServerVersion=11&ApplicationName=${ALLURE_REPORT_SERVICE_NAME}
      SPRING_DATASOURCE_USERNAME: ${ALLURE_REPORT_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${ALLURE_REPORT_DB_PASS}
      SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE: ${ALLURE_REPORT_DB_MAXIMUMPOOLSIZE}
      SPRING_DATASOURCE_HIKARI_CONNECTIONTIMEOUT: ${ALLURE_REPORT_DB_CONNECTIONTIMEOUT}

      SPRING_RABBITMQ_HOST: ${ALLURE_RABBIT_HOST}
      SPRING_RABBITMQ_PORT: ${ALLURE_RABBIT_PORT}
      SPRING_RABBITMQ_USERNAME: ${ALLURE_RABBIT_USER}
      SPRING_RABBITMQ_PASSWORD: ${ALLURE_RABBIT_PASS}
      SPRING_RABBITMQ_LISTENER_SIMPLE_MAXCONCURRENCY: ${ALLURE_RABBIT_MAXCONCURRENCY}
      ALLURE_UPLOAD_PARSE_CONSUMERSPERQUEUE: ${ALLURE_RABBIT_PARSE_CONSUMERSPERQUEUE}
      ALLURE_UPLOAD_STORE_CONSUMERSPERQUEUE: ${ALLURE_RABBIT_STORE_CONSUMERSPERQUEUE}

      ALLURE_BLOBSTORAGE_TYPE: S3
      ALLURE_BLOBSTORAGE_S3_PATHSTYLEACCESS: ${ALLURE_S3_PATHSTYLE}
      ALLURE_BLOBSTORAGE_S3_ENDPOINT: ${ALLURE_S3_URL}
      ALLURE_BLOBSTORAGE_S3_BUCKET: ${ALLURE_S3_BUCKET}
      ALLURE_BLOBSTORAGE_S3_REGION: ${ALLURE_S3_REGION}
      ALLURE_BLOBSTORAGE_S3_ACCESSKEY: ${ALLURE_S3_ACCESS_KEY}
      ALLURE_BLOBSTORAGE_S3_SECRETKEY: ${ALLURE_S3_SECRET_KEY}
      ALLURE_BLOBSTORAGE_MAXCONCURRENCY: ${ALLURE_S3_MAXCONCURRENCY}
      ALLURE_SCHEDULER_CLEANER_BLOB_BATCHSIZE: ${ALLURE_SCHEDULER_CLEANER_BLOB_BATCHSIZE}
      ALLURE_TASKEXECUTOR_COREPOOLSIZE: ${ALLURE_TASKEXECUTOR_COREPOOLSIZE}

      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: 'true'
      MANAGEMENT_HEALTH_DISKSPACE_ENABLED: 'false'
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,prometheus,configprops
      MANAGEMENT_ENDPOINT_HEALTH_CACHE_TIME-TO-LIVE: 15s
      LOGGING_LEVEL_IO_QAMETA_ALLURE: warn
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: warn
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: warn
      LOGGING_LEVEL_COM_ZAXXER_HIKARI: warn
      SERVER_ERROR_INCLUDE_STACKTRACE: always
      TZ: ${TZ}
      JAVA_TOOL_OPTIONS: >
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -XX:MinHeapFreeRatio=15
        -XX:MaxHeapFreeRatio=30
        -Dsun.jnu.encoding=UTF-8
        -Dfile.encoding=UTF-8
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"


  redis:
    restart: always
    image: bitnami/redis:6.2
    container_name: redis
    networks:
      - testops-net
    environment:
      TZ: ${TZ}
      REDIS_PASSWORD: ${ALLURE_REDIS_PASS}
      REDIS_PORT_NUMBER: ${ALLURE_REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  rabbitmq:
    restart: always
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    networks:
      - testops-net
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${ALLURE_RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${ALLURE_RABBIT_PASS}

  autoheal:
    restart: always
    container_name: autoheal
    image: willfarrell/autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      AUTOHEAL_INTERVAL: 30
      AUTOHEAL_START_PERIOD: 60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  testops-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  rabbitmq-volume: